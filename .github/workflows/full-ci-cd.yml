name: 'Test, Build and Release'


on:
  push:
    branches:
      - master
      - develop
      - bug/**
      - feature/**


env:
  UNITY_VERSION: 2019.3.14f1
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  ITCH_USER: crass_sandwich
  BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}


jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive

      - name: Cache
        uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-test
          restore-keys: Library-

      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.4
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          testMode: ${{ matrix.testMode }}

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report-${{ matrix.testMode }}
          path: artifacts


  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - WebGL
          - StandaloneWindows
          - StandaloneOSX

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive

      - name: Cache
        uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - name: Build
        uses: webbertakken/unity-builder@v1.4
        with:
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Upload build artifact to github cache
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build


  release:
    # only run if both test and build jobs succeeded, and if the branch is either 'master' or 'develop'
    needs: [test, build]
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'ref/heads/develop' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        targetPlatform:
          - builder-name: WebGL
            itch-name: webgl
          - builder-name: StandaloneWindows
            itch-name: win
          - builder-name: StandaloneOSX
            itch-name: osx

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.targetPlatform.builder-name }}

      - name: 'Set the name of the itch.io page to deploy to for master branch'
        if: ${{ github.event.inputs.channel == 'master' }}
        run: echo "ITCH_GAME=witchos" >> $GITHUB_ENV

      - name: 'Set the name of the itch.io page to deploy to for develop branch'
        if: ${{ github.event.inputs.channel == 'develop' }}
        run: echo "ITCH_GAME=witchos-secret-version" >> $GITHUB_ENV

      - name: Push to itch.io
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          PACKAGE: build-${{ matrix.targetPlatform.builder-name }}
          CHANNEL: ${{ matrix.targetPlatform.itch-name }}
